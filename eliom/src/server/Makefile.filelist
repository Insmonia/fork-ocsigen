
INTF := eliom_pervasives.cmi        \
        eliom_cookies.cmi           \
        eliom_common.cmi            \
        eliom_types.cmi             \
        eliom_parameters.cmi        \
        eliom_services.cmi          \
        eliom_process.cmi           \
        eliom_config.cmi            \
        eliom_request_info.cmi      \
        eliom_state.cmi             \
        eliom_uri.cmi               \
        eliom_mkforms.cmi           \
        eliom_output.cmi            \
        eliom_comet.cmi             \
        eliom_react.cmi             \
        eliom_bus.cmi               \
        eliom_wrap.cmi              \
	\
        eliom_tools_common.cmi      \
        eliom_tools.cmi             \
        eliom_mkreg.cmi             \
        eliom_error_pages.cmi       \
        eliom_references.cmi        \
        eliom_extensions.cmi        \
        \
	extensions/eliom_s2s.cmi    \
        extensions/eliom_openid.cmi \
        extensions/atom_feed.cmi    \
        extensions/eliom_atom.cmi   \

ifeq "$(OCAMLDUCE)" "YES"

INTF += eliom_duce.cmi       \
        eliom_duce_sigs.cmi  \
        eliom_duce_types.cmi \
	eliom_duce_tools.cmi \

endif

IMPL := eliom.cma             \

ifeq "$(OCAMLDUCE)" "YES"
IMPL += eliom_duce.cma
endif

NATIMPL := eliom.cmxa eliom.a
ifeq "$(OCAMLDUCE)" "YES"
NATIMPL += eliom_duce.cmxa eliom_duce.a
endif

ifeq "$(NATDYNLINK)" "YES"
NATIMPL += eliom.cmxs
ifeq "$(OCAMLDUCE)" "YES"
NATIMPL += eliom_duce.cmxs
endif
endif

NOMLI := eliom_error_pages.mli \
	 eliom_client.mli      \
         eliom_process.mli     \

NOP4  := eliom_pervasives.mli \
         eliom_duce.mli       \
         eliom_duce_tools.mli \
         eliom_duce_types.mli \

DOC := ${filter-out ${NOMLI}, ${INTF:.cmi=.mli}} \
       eliom_output_base.mli \
       eliom_types_base.mli \

## Can't be parsed by ocamlducedoc because of deriving.
#       eliom_comet_base.mli \
